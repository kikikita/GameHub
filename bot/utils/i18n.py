from __future__ import annotations

import httpx
from settings import settings


TRANSLATIONS = {
    "en": {
        "choose_language": "Choose your language",
        "registration_failed": "Failed to register",
        "start_welcome": "üëã Hello, <b>{name}</b>!\nWelcome to <b>Immersia</b>",
        "help_message": (
            "‚ÑπÔ∏è <b>Help</b>\n\n"
            "<b>/new_game</b> ‚Äî create a new game\n"
            "<b>/my_games</b> ‚Äî list your active games\n"
            "<b>/end_game</b> ‚Äî finish current session\n"
            "<b>/help</b> ‚Äî show this message"
        ),
        "no_stories": "No available stories",
        "choose_story": "Choose your story:",
        "open_all_stories": "‚ú® Open all stories",
        "open_web_app": "‚ú® Open web app",
        "create_story_webapp": "Create your own story in the web app",
        "create_story_btn": "‚ú®{cost} Create own story",
        "setup_setting": "Setting",
        "setup_char": "Character",
        "setup_genre": "Genre",
        "setup_visual_style": "Visual style",
        "start_game": "Start game",
        "cancel": "Cancel",
        "enter_setting_desc": "üåç Enter setting description",
        "enter_char_desc": "ü¶∏‚Äç‚ôÇÔ∏è Enter character description",
        "enter_genre": "üé≠ Choose genre",
        "enter_visual_style": "üé® Enter visual style",
        "error_story": "Story error",
        "error_session": "Session error",
        "error_scene": "Scene error",
        "error_generic": "Error",
        "you_chose": "You chose: {choice}",
        "no_active_games": "You have no active games yet. Use /new_game to start.",
        "resume_game_prompt": "You can continue one of your current games:",
        "no_active_game": "No active game",
        "session_finished": "Session finished",
        "not_enough_wishes": "üòØ‚ú® Not enough wishes to create a story",
        "top_up_wishes": "‚ú® Top up wishes",
        "top_up_energy": "‚ö°Ô∏è Top up energy",
        "not_enough_energy_title": "üòØ‚ö°Ô∏è Not enough energy to make a choice.",
        "not_enough_energy_subtitle": "Top up your energy or wait for it to recharge ‚Äî you gain 1 energy every hour.",
        "label_setting_desc": "üåç Setting Description",
        "label_char": "ü¶∏‚Äç‚ôÇÔ∏è Character description",
        "label_genre": "üé≠ Genre",
        "label_visual_style": "üé® Visual style",
        "genre_Horror": "Horror",
        "genre_Romantic": "Romantic",
        "genre_Adventure": "Adventure",
        "genre_Fantasy": "Fantasy",
        "genre_SciFi": "Sci-Fi",
        "genre_Detective": "Detective",
        "genre_Mystery": "Mystery",
        "genre_Drama": "Drama",
        "genre_Comedy": "Comedy",
        "genre_Action": "Action",
        "genre_Thriller": "Thriller",
        "genre_Historical": "Historical",
        "genre_Western": "Western",
        "genre_Superhero": "Superhero",
        "genre_SliceOfLife": "Slice of Life",
        "genre_Survival": "Survival",
        "genre_Steampunk": "Steampunk",
        "genre_Cyberpunk": "Cyberpunk",
        "genre_PostApocalyptic": "Post-apocalyptic",
        "genre_Space": "Space",
        "genre_Sports": "Sports",
        "genre_Crime": "Crime"
    },
    "ru": {
        "choose_language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
        "registration_failed": "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
        "start_welcome": "üëã –ü—Ä–∏–≤–µ—Ç, <b>{name}</b>!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Immersia</b>",
        "help_message": (
            "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>\n\n"
            "<b>/new_game</b> ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n"
            "<b>/my_games</b> ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä\n"
            "<b>/end_game</b> ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n"
            "<b>/help</b> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        ),
        "no_stories": "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π",
        "choose_story": "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –∏—Å—Ç–æ—Ä–∏—é:",
        "open_all_stories": "‚ú® –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Å–µ –∏—Å—Ç–æ—Ä–∏–∏",
        "open_web_app": "‚ú® –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "create_story_webapp": "–°–æ–∑–¥–∞–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏",
        "create_story_btn": "‚ú®{cost} –°–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é",
        "setup_setting": "–°–µ—Ç—Ç–∏–Ω–≥",
        "setup_char": "–ü–µ—Ä—Å–æ–Ω–∞–∂",
        "setup_genre": "–ñ–∞–Ω—Ä",
        "setup_visual_style": "–í–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
        "start_game": "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
        "cancel": "–û—Ç–º–µ–Ω–∞",
        "enter_setting_desc": "üåç –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç—Ç–∏–Ω–≥–∞",
        "enter_char_desc": "ü¶∏‚Äç‚ôÇÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
        "enter_genre": "üé≠ –í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä",
        "enter_visual_style": "üé® –í–≤–µ–¥–∏—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
        "error_story": "–û—à–∏–±–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏",
        "error_session": "–û—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏",
        "error_scene": "–û—à–∏–±–∫–∞ —Å—Ü–µ–Ω—ã",
        "error_generic": "–û—à–∏–±–∫–∞",
        "you_chose": "–í—ã –≤—ã–±—Ä–∞–ª–∏: {choice}",
        "no_active_games": "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new_game, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        "resume_game_prompt": "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–¥–Ω—É –∏–∑ —Ç–µ–∫—É—â–∏—Ö –∏–≥—Ä:",
        "no_active_game": "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã",
        "session_finished": "–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
        "not_enough_wishes": "üòØ‚ú® –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∂–µ–ª–∞–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏.",
        "top_up_wishes": "‚ú® –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏—è",
        "top_up_energy": "‚ö°Ô∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é",
        "not_enough_energy_title": "üòØ‚ö°Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞.",
        "not_enough_energy_subtitle": "–ü–æ–ø–æ–ª–Ω–∏—Ç–µ —ç–Ω–µ—Ä–≥–∏—é –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è ‚Äî 1 —ç–Ω–µ—Ä–≥–∏—è –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å.",
        "label_setting_desc": "üåç –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç—Ç–∏–Ω–≥–∞",
        "label_char": "ü¶∏‚Äç‚ôÇÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
        "label_genre": "üé≠ –ñ–∞–Ω—Ä",
        "label_visual_style": "üé® –í–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
        "genre_Horror": "–£–∂–∞—Å—ã",
        "genre_Romantic": "–†–æ–º–∞–Ω—Ç–∏–∫–∞",
        "genre_Adventure": "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ",
        "genre_Fantasy": "–§—ç–Ω—Ç–µ–∑–∏",
        "genre_SciFi": "–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞",
        "genre_Detective": "–î–µ—Ç–µ–∫—Ç–∏–≤",
        "genre_Mystery": "–ú–∏—Å—Ç–∏–∫–∞",
        "genre_Drama": "–î—Ä–∞–º–∞",
        "genre_Comedy": "–ö–æ–º–µ–¥–∏—è",
        "genre_Action": "–≠–∫—à–µ–Ω",
        "genre_Thriller": "–¢—Ä–∏–ª–ª–µ—Ä",
        "genre_Historical": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π",
        "genre_Western": "–í–µ—Å—Ç–µ—Ä–Ω",
        "genre_Superhero": "–°—É–ø–µ—Ä–≥–µ—Ä–æ–∏–∫–∞",
        "genre_SliceOfLife": "–ñ–∏–∑–Ω—å",
        "genre_Survival": "–í—ã–∂–∏–≤–∞–Ω–∏–µ",
        "genre_Steampunk": "–°—Ç–∏–º–ø–∞–Ω–∫",
        "genre_Cyberpunk": "–ö–∏–±–µ—Ä–ø–∞–Ω–∫",
        "genre_PostApocalyptic": "–ü–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å",
        "genre_Space": "–ö–æ—Å–º–æ—Å",
        "genre_Sports": "–°–ø–æ—Ä—Ç",
        "genre_Crime": "–ö—Ä–∏–º–∏–Ω–∞–ª"
    },
}

DEFAULT_LANG = "en"


# Reusable HTTPX client for backend requests
client = httpx.AsyncClient(
    base_url=settings.bots.app_url,
    timeout=10.0,
    headers={"X-Server-Auth": settings.bots.server_auth_token.get_secret_value()},
)


_LANG_CACHE: dict[int, str] = {}


def t(lang: str, key: str, **kwargs) -> str:
    lang_dict = TRANSLATIONS.get(lang, TRANSLATIONS[DEFAULT_LANG])
    text = lang_dict.get(key) or TRANSLATIONS[DEFAULT_LANG].get(key, "")
    return text.format(**kwargs)


async def get_user_language(uid: int, *, refresh: bool = False) -> str:
    """Return the language for a user, using a simple in-memory cache."""

    if not refresh and uid in _LANG_CACHE:
        return _LANG_CACHE[uid]

    resp = await client.get(
        "/api/v1/users/me/",
        headers={"X-User-Id": str(uid)},
    )
    if resp.status_code == 200:
        lang = resp.json().get("language") or DEFAULT_LANG
    else:
        lang = DEFAULT_LANG
    _LANG_CACHE[uid] = lang
    return lang


def set_user_language(uid: int, lang: str) -> None:
    """Update the cached language for a user (e.g. after miniapp change)."""
    _LANG_CACHE[uid] = lang
